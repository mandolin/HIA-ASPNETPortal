<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Announcements_readMore" xml:space="preserve">
    <value>read more...</value>
  </data>
  <data name="Signin_accountLogin" xml:space="preserve">
    <value>Account Login</value>
  </data>
  <data name="Signin_email" xml:space="preserve">
    <value>Email:</value>
  </data>
  <data name="Signin_LoginFaild" xml:space="preserve">
    <value>Login Failed!</value>
  </data>
  <data name="Signin_LoginImg" xml:space="preserve">
    <value>/images/signin.gif</value>
  </data>
  <data name="Signin_password" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="Signin_RegImg" xml:space="preserve">
    <value>/images/register.gif</value>
  </data>
  <data name="Signin_rememberLogin" xml:space="preserve">
    <value>Remember Login</value>
  </data>
  <data name="Admin_AccessDenied_AccessDenied" xml:space="preserve">
    <value>Access Denied</value>
  </data>
  <data name="Admin_AccessDenied_DeniedAbout" xml:space="preserve">
    <value>Either you are not currently logged in, or you do not have access to this tab page within the portal. Please contact the portal administrator to obtain access.</value>
  </data>
  <data name="Admin_AccessDenied_ReturnToHome" xml:space="preserve">
    <value>Return to the ASP.NET Portal Starter Kit Home</value>
  </data>
  <data name="Admin_EditAccessDenied_EditAccessDenied" xml:space="preserve">
    <value>Edit Access Denied</value>
  </data>
  <data name="Admin_ManageUsers_AddUserToRole" xml:space="preserve">
    <value>Add user to this role</value>
  </data>
  <data name="Admin_ManageUsers_ApplyNamePwdChange" xml:space="preserve">
    <value>Apply Name and Password Changes</value>
  </data>
  <data name="Admin_ManageUsers_ConfirmPwd" xml:space="preserve">
    <value>Confirm Password:</value>
  </data>
  <data name="Admin_ManageUsers_Email" xml:space="preserve">
    <value>Email (or Windows domain name):</value>
  </data>
  <data name="Admin_ManageUsers_ManageUser" xml:space="preserve">
    <value>Manage User</value>
  </data>
  <data name="Admin_ManageUsers_Password" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="Admin_ManageUsers_RemoveFromRoleAlt" xml:space="preserve">
    <value>Remove user from this role</value>
  </data>
  <data name="Admin_ManageUsers_SaveUserChange" xml:space="preserve">
    <value>Save User Changes</value>
  </data>
  <data name="Admin_Users_FormMsg" xml:space="preserve">
    <value>Users must be registered to view secure content.  Users may add themselves using the Register form, and Administrators may add users to specific roles using the Security Roles function above.  This section permits Administrators to manage users and their security roles directly.</value>
  </data>
  <data name="Admin_Users_OtherMsg" xml:space="preserve">
    <value>Domain users do not need to be registered to access portal content that is available to \"All Users\".  Administrators may add domain users to specific roles using the Security Roles function above.  This section permits Administrators to manage users and their security roles directly.</value>
  </data>
  <data name="Admin_Users_RegisteredUsers" xml:space="preserve">
    <value>Registered Users:</value>
  </data>
  <data name="Admin_User_AddUser" xml:space="preserve">
    <value>Add New User</value>
  </data>
  <data name="Admin_User_DelUser" xml:space="preserve">
    <value>Delete this user</value>
  </data>
  <data name="Admin_User_EditUser" xml:space="preserve">
    <value>Edit this user</value>
  </data>
  <data name="Module_Name_ID_32" xml:space="preserve">
    <value>Manage Users</value>
  </data>
</root>